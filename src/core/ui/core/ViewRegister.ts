/**The script is automatically generated by BatMain.bat , please do not modify */
import ComGongFa from "../ui/PkgMain/ComGongFa";
import ComItemInfo from "../ui/PkgMain/ComItemInfo";
import ComJueSe from "../ui/PkgMain/ComJueSe";
import ComLingShou from "../ui/PkgMain/ComLingShou";
import ComShiLian from "../ui/PkgMain/ComShiLian";
import ComTipInfo from "../ui/PkgCommon/ComTipInfo";
import ComXiuXing from "../ui/PkgMain/ComXiuXing";
import PkgCommonBinder from "../ui/PkgCommon/PkgCommonBinder";
import PkgGameBinder from "../ui/PkgGame/PkgGameBinder";
import PkgLoginBinder from "../ui/PkgLogin/PkgLoginBinder";
import PkgMainBinder from "../ui/PkgMain/PkgMainBinder";
import RenderGongFa from "../ui/PkgMain/RenderGongFa";
import RenderJueSe from "../ui/PkgMain/RenderJueSe";
import RenderShiLian from "../ui/PkgMain/RenderShiLian";
import UIGameMain from "../ui/PkgGame/UIGameMain";
import UILoginMain from "../ui/PkgLogin/UILoginMain";
import UIMain from "../ui/PkgMain/UIMain";
import UISetting from "../ui/PkgMain/UISetting";
import UITipConfirm from "../ui/PkgCommon/UITipConfirm";
import UIWaiting from "../ui/PkgCommon/UIWaiting";
import { ComGongFaCtrl } from "../viewCtrl/PkgMain/Coms/ComGongFaCtrl";
import { ComGongFaView } from "../view/PkgMain/Coms/ComGongFaView";
import { ComItemInfoCtrl } from "../viewCtrl/PkgMain/Coms/ComItemInfoCtrl";
import { ComItemInfoView } from "../view/PkgMain/Coms/ComItemInfoView";
import { ComJueSeCtrl } from "../viewCtrl/PkgMain/Coms/ComJueSeCtrl";
import { ComJueSeView } from "../view/PkgMain/Coms/ComJueSeView";
import { ComLingShouCtrl } from "../viewCtrl/PkgMain/Coms/ComLingShouCtrl";
import { ComLingShouView } from "../view/PkgMain/Coms/ComLingShouView";
import { ComShiLianCtrl } from "../viewCtrl/PkgMain/Coms/ComShiLianCtrl";
import { ComShiLianView } from "../view/PkgMain/Coms/ComShiLianView";
import { ComTipInfoCtrl } from "../viewCtrl/PkgCommon/Coms/ComTipInfoCtrl";
import { ComTipInfoView } from "../view/PkgCommon/Coms/ComTipInfoView";
import { ComXiuXingCtrl } from "../viewCtrl/PkgMain/Coms/ComXiuXingCtrl";
import { ComXiuXingView } from "../view/PkgMain/Coms/ComXiuXingView";
import { IViewCtrl_Class, IView_Class } from "./interfaces";
import { Logger } from "../../libs/utils/Logger";
import { RenderGongFaView } from "../view/PkgMain/Renders/RenderGongFaView";
import { RenderJueSeView } from "../view/PkgMain/Renders/RenderJueSeView";
import { RenderShiLianView } from "../view/PkgMain/Renders/RenderShiLianView";
import { UIGameMainCtrl } from "../viewCtrl/PkgGame/UIGameMainCtrl";
import { UIGameMainView } from "../view/PkgGame/UIGameMainView";
import { UILoginMainCtrl } from "../viewCtrl/PkgLogin/UILoginMainCtrl";
import { UILoginMainView } from "../view/PkgLogin/UILoginMainView";
import { UIMainCtrl } from "../viewCtrl/PkgMain/UIMainCtrl";
import { UIMainView } from "../view/PkgMain/UIMainView";
import { UISettingCtrl } from "../viewCtrl/PkgMain/UISettingCtrl";
import { UISettingView } from "../view/PkgMain/UISettingView";
import { UITipConfirmCtrl } from "../viewCtrl/PkgCommon/UITipConfirmCtrl";
import { UITipConfirmView } from "../view/PkgCommon/UITipConfirmView";
import { UIWaitingCtrl } from "../viewCtrl/PkgCommon/UIWaitingCtrl";
import { UIWaitingView } from "../view/PkgCommon/UIWaitingView";
import { ViewClass, CtrlClass } from "./UIGlobal";
import { ViewID } from "./ViewID";

const logger = Logger.Create("ViewRegister").setEnable(true);

export class ViewRegister {

    Init() {
        this.pkgBind();
        this.viewBind();
        this.registerView();
    }

    /**包bind */
    private pkgBind() {
		PkgCommonBinder.bindAll();
		PkgGameBinder.bindAll();
		PkgLoginBinder.bindAll();
		PkgMainBinder.bindAll();
	}

    /**页面替换bind */
    private viewBind() {
		//Coms
		fairygui.UIObjectFactory.setExtension(ComTipInfo.URL, ComTipInfoView);
		fairygui.UIObjectFactory.setExtension(ComGongFa.URL, ComGongFaView);
		fairygui.UIObjectFactory.setExtension(ComItemInfo.URL, ComItemInfoView);
		fairygui.UIObjectFactory.setExtension(ComJueSe.URL, ComJueSeView);
		fairygui.UIObjectFactory.setExtension(ComLingShou.URL, ComLingShouView);
		fairygui.UIObjectFactory.setExtension(ComShiLian.URL, ComShiLianView);
		fairygui.UIObjectFactory.setExtension(ComXiuXing.URL, ComXiuXingView);

		//Renders
		fairygui.UIObjectFactory.setExtension(RenderGongFa.URL, RenderGongFaView);
		fairygui.UIObjectFactory.setExtension(RenderJueSe.URL, RenderJueSeView);
		fairygui.UIObjectFactory.setExtension(RenderShiLian.URL, RenderShiLianView);

		//Views
		fairygui.UIObjectFactory.setExtension(UITipConfirm.URL, UITipConfirmView);
		fairygui.UIObjectFactory.setExtension(UIWaiting.URL, UIWaitingView);
		fairygui.UIObjectFactory.setExtension(UIGameMain.URL, UIGameMainView);
		fairygui.UIObjectFactory.setExtension(UILoginMain.URL, UILoginMainView);
		fairygui.UIObjectFactory.setExtension(UIMain.URL, UIMainView);
		fairygui.UIObjectFactory.setExtension(UISetting.URL, UISettingView);
	}

    /**页面注册 */
    private registerView() {
		const register = this.registView;
		//Coms
		register(ViewID.ComTipInfoView, ComTipInfoView, ComTipInfoCtrl);
		register(ViewID.ComGongFaView, ComGongFaView, ComGongFaCtrl);
		register(ViewID.ComItemInfoView, ComItemInfoView, ComItemInfoCtrl);
		register(ViewID.ComJueSeView, ComJueSeView, ComJueSeCtrl);
		register(ViewID.ComLingShouView, ComLingShouView, ComLingShouCtrl);
		register(ViewID.ComShiLianView, ComShiLianView, ComShiLianCtrl);
		register(ViewID.ComXiuXingView, ComXiuXingView, ComXiuXingCtrl);

		//Views
		register(ViewID.TipConfirmView, UITipConfirmView, UITipConfirmCtrl);
		register(ViewID.WaitingView, UIWaitingView, UIWaitingCtrl);
		register(ViewID.GameMainView, UIGameMainView, UIGameMainCtrl);
		register(ViewID.LoginMainView, UILoginMainView, UILoginMainCtrl);
		register(ViewID.MainView, UIMainView, UIMainCtrl);
		register(ViewID.SettingView, UISettingView, UISettingCtrl);
	}

	private registView(viewId: ViewID, viewCls: IView_Class, ctrlCls?: IViewCtrl_Class) {
		if (!viewCls) throw new Error("参数不能为空！");
		if (!ViewClass[viewId]) {
			(ViewClass as any)[viewId] = viewCls;
			(CtrlClass as any)[viewId] = ctrlCls;
		} else {
			logger.warn(`重复添加映射 => ${viewId}`);
		}
	}
}
export const uiRegister = new ViewRegister();